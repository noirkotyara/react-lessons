{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","assets/images/kuscherenko.jpg","assets/images/lyubov.jpg","components/Dialogs/Message/Message.module.css","components/common/Preloader/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","assets/startPage/av.jpg","assets/images/sad.png","assets/images/happy.png","assets/startPage/logo2.jpg","components/Navbar/Navbar.module.css","api/instance.js","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Users/User/User.module.css","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/messages-reducer.ts","api/api.js","redux/authMe.ts","components/common/InputChecker/InputChecker.jsx","components/common/Validators/Validators.jsx","components/hoc/hoc.jsx","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Navbar/Friends/Friends.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","redux/users-reducer.ts","components/Users/User/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.jsx","redux/users-selectors.js","components/common/Pagination/Pagination.jsx","components/Users/UsersContainer.jsx","redux/profile-reducer.tsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/Contacts.jsx","components/Profile/ProfileInfo/ProfileInfoEdit/ProfileEditForm.jsx","components/Profile/ProfileInfo/ProfileInfoEdit/ProfileInfoEdit.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileStatus/ProfileStatusHook.jsx","components/Profile/ProfileStatus/ProfileStatus.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.ts","App.js","serviceWorker.js","redux/sideBar-reducer.ts","redux/redux-store.js","index.js","components/Profile/ProfileStatus/ProfileStatus.module.css","components/common/InputChecker/InputChecker.module.css","components/Header/Header.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","assets/images/zorro.jpg","components/Dialogs/Dialog/Dialog.module.css","components/Navbar/Friends/Friends.module.css","components/common/Pagination/Pagination.module.css","components/Login/Login.module.css","components/common/Preloader/Preloader.module.css"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","ActionLink","href","onClick","e","console","log","News","Music","Settings","initialState","messagesData","id","message","dialogsUsersData","name","ava","zorroAva","lyubovAva","kuscherenkoAva","idNum","messagesReducer","state","action","type","newMessageText","require","usersAPI","currentPage","pageSize","get","then","response","data","page","delete","post","authAPI","email","login","password","rememberMe","checkbox","captcha","symbols","userProfile","userID","status","put","file","formData","FormData","append","profile","securityAPI","CAPTCHA","setUserData","isAuthMe","setAuthMe","authMeSuccessThunk","dispatch","a","resultCode","getCaptchaThunk","url","authMe","TextareaComp","input","meta","props","className","error","visited","active","cl","placeholder","messageError","InputComp","required","value","undefined","maxLengthC","maxLen","length","withAuthMe","Component","this","to","React","Dialog","path","dialog","avatar","src","alt","activeClassName","Message","maxLength10","SendMessageRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","component","sendMessage","compose","connect","authMeSuccess","dialogsGenerate","map","d","key","messagesGenerate","m","dialogs","dialogsItems","messages","DialogsContainer","messagesPage","DialogsContainerHOCRedirect","Friends","friend","Navbar","friendsListComp","fff","nav","item","friendsList","friendsNav","NavbarContainer","sideBar","DATA","usersData","totalCount","isFetching","followingInProgress","setUsers","toggleFetching","toggleFollowing","followingTF","userId","usersReducer","u","followed","state02","push","filter","User","userItem","user","photos","small","avaDefault","country","off","on","stars","lastMessage","disabled","some","doUnfollow","statusFollow","doFollow","Users","usersItem","usersGenerate","Preloader","divPreloader","preloader","getUsersPage","usersPage","getUsersData","createSelector","getCurrentPage","getTotalCount","getPageSize","getIsFetching","getFollowingInProgress","Pagination","pagesQuantity","Math","ceil","pA","i","useState","currentPortion","setCurrentPortion","portionNumber","leftBorder","rightBorder","pages","changeCurPage","pageSelected","UsersContainerClass","setCurPage","userPage","pagination","items","POSTF","postsData","likes","newPostText","updateStatusAC","postForm","content","uploadPhoto","image","setProfileThunk","profileReducer","newPost","Post","maxLength20","FormMyPostR","addPost","MyPosts","postsGenerate","p","posts","MyPostsContainer","profilePage","socialIcons","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Contact","sIcon","property","Object","keys","forEach","socialIcon","fieldCreator","enableReinitialize","contactsArray","profileData","contacts","editData","checker","commonError","ProfileInfoEdit","owner","updateProfile","editMode","changeEditMode","initialValues","dataFlow","editButton","fullname","fullName","aboutMe","lookingForAJob","happy","sad","style","width","height","lookingForAJobDescription","ProfileInfo","memo","checkedAuth","photoFile","changePhotoFile","description","onDoubleClick","accept","onChange","target","files","ProfileStatusHook","setStatus","useEffect","editionVersion","onBlur","updateStatus","autoFocus","event","readyStatus","match","params","Profile","authorizedUser","store","ProfileContainer","refreshProfile","setProfile","getStatus","prevProps","prevState","authorized","getState","stopSubmit","_error","Promise","reject","withRouter","Header","header","loginPhrase","logout","userLogin","logIn","logo","HeaderCl","HeaderContainer","dataR","maxLength30","LoginFormContainer","isLogin","catchError","starter","initialized","appInitialization","App","PostsComp","DialogsMessagesComp","UsersComp","UsersContainer","LoginFormContainerCom","setInitialize","render","AppMain","appInit","Boolean","window","location","hostname","sideBarReducer","createStore","combineReducers","applyMiddleware","formReducer","composeWithDevTools","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8f7d7054.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"MyPosts_addPost__1exZM\"};","module.exports = __webpack_public_path__ + \"static/media/kuscherenko.7bc7e317.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lyubov.fc2a1a49.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__xSb92\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.c04e3ad7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2DfE4\"};","module.exports = __webpack_public_path__ + \"static/media/av.3322ac59.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sad.f356e41d.png\";","module.exports = __webpack_public_path__ + \"static/media/happy.ed41fce9.png\";","module.exports = __webpack_public_path__ + \"static/media/logo2.623bb4d9.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__kBj7q\",\"item\":\"Navbar_item__3Pa_F\",\"active\":\"Navbar_active__28OkF\",\"friendsNav\":\"Navbar_friendsNav__2q2DP\"};","import * as axios from 'axios';\r\n\r\nexport const instance = axios.create({ //we have an object\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"30bffa88-490b-405c-83b6-e6b58d235873\"\r\n    }\r\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__3GDnK\",\"contacts\":\"ProfileInfo_contacts__37vHF\",\"socialIcon\":\"ProfileInfo_socialIcon__GBk5o\",\"editData\":\"ProfileInfo_editData__3bG9g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"User_userItem__4zQnk\",\"avatar\":\"User_avatar__39gSA\",\"lastMessage\":\"User_lastMessage__1hlgj\",\"name\":\"User_name__2R3Cl\",\"off\":\"User_off__XjvUl\",\"on\":\"User_on__1XQfw\",\"country\":\"User_country__2T7Tr\",\"stars\":\"User_stars__3aZm4\"};","import React from 'react';\r\nimport cl from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n          <ActionLink/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ActionLink() {\r\n  function handleClick(e) {\r\n    // e.preventDefault();\r\n    console.log('По ссылке кликнули.');\r\n  }\r\n\r\n  return (\r\n    <a href=\"#\" onClick={handleClick}>\r\n      Нажми на меня\r\n    </a>\r\n  );\r\n}\r\n\r\n\r\nexport default News;","import React from 'react';\r\nimport cl from './Music.module.css';\r\n\r\nconst Music = () =>{\r\n    return(\r\n        <div>\r\n             Music\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport cl from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import zorroAva from './../assets/images/zorro.jpg';\r\nimport kuscherenkoAva from './../assets/images/kuscherenko.jpg';\r\nimport lyubovAva from './../assets/images/lyubov.jpg';\r\n\r\nconst ADDMESSAGESTATE = 'ADD-MESSAGE-STATE';\r\n\r\ntype MessagesDataType = {\r\n    id: number\r\n    message: string\r\n};\r\ntype DialogsUsersDataType = {\r\n    id: number\r\n    name: string\r\n    ava: string\r\n}\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        { id: 1, message: 'злтщототолиолиг' },\r\n        { id: 2, message: 'Hello' },\r\n        { id: 3, message: 'Privet' },\r\n        { id: 4, message: 'Au revoir' }\r\n    ] as Array<MessagesDataType>,\r\n    dialogsUsersData: [\r\n        { id: 1, name: 'Zorro', ava: zorroAva },\r\n        { id: 2, name: 'Lyubov', ava: lyubovAva },\r\n        { id: 3, name: 'Kuscherenko', ava: kuscherenkoAva }\r\n    ] as Array<DialogsUsersDataType>\r\n};\r\nexport type initialStateType = typeof initialState;\r\nlet idNum = 5;\r\nlet messagesReducer = (state = initialState, action: sendMessageAType):initialStateType => {\r\n    switch (action.type) {\r\n        case ADDMESSAGESTATE:\r\n            idNum++;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {\r\n                    id: idNum,\r\n                    message: action.newMessageText\r\n                }]\r\n    }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype sendMessageAType = {\r\n    type: typeof ADDMESSAGESTATE\r\n    newMessageText: string \r\n};\r\nexport let sendMessage = (newMessageText: string):sendMessageAType => ({ type: ADDMESSAGESTATE, newMessageText });\r\n\r\n\r\nexport default messagesReducer;","const { instance } = require(\"./instance\")\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) { \r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    changeCurPage(page, pageSize) {\r\n        return instance.get(`users?page=${page}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    unFollowDeleteRequest(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n    followPostRequest(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    isAuthMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    isLogin(data) {\r\n        return instance.post(`auth/login`, { email: data.login, password: data.password, rememberMe: data.checkbox, captcha: data.symbols })\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    isLogout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const userProfile = {\r\n    showProfile(userID) {\r\n        return instance.get(`profile/${userID}`)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status`, { status: status })\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userID) {\r\n        return instance.get(`/profile/status/${userID}`)\r\n            .then(response => response.data)\r\n\r\n    },\r\n    uploadPhoto(file){\r\n        let formData = new FormData();\r\n        formData.append('image',file);\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n    updateProfile(profile){\r\n        return instance.put(`/profile`, profile)\r\n        .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL(){\r\n        return instance.get(`/security/get-captcha-url`)\r\n        .then(response => response.data);\r\n    }\r\n}","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\nconst IS_AUTH_ME = 'IS-AUTH-ME';\r\n\r\nconst CAPTCHA = 'CAPTCHA-SUCCESS';\r\n\r\ntype DataType = {\r\n    id: number | null\r\n    login: string | null\r\n    email: string | null\r\n    isAuthMe: boolean\r\n    captcha: string | null\r\n}\r\ntype setUserDataAType = {\r\n    type: typeof SET_USER_DATA\r\n    data: DataType \r\n}\r\ntype setAuthMeAType = {\r\n    type: typeof IS_AUTH_ME\r\n    isAuthMe: boolean\r\n}\r\ntype setCaptchaAType = {\r\n    type: typeof CAPTCHA\r\n    captcha: string | null\r\n}\r\nexport let setUserData = ({ id, login, email, isAuthMe, captcha = null }:DataType):setUserDataAType => ({ type: SET_USER_DATA, data: { id, login, email, isAuthMe, captcha } });\r\nexport let setAuthMe = (isAuthMe:boolean):setAuthMeAType => ({ type: IS_AUTH_ME, isAuthMe });\r\nlet setCaptcha = (captcha: string):setCaptchaAType => ({type: CAPTCHA, captcha});\r\n\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    login: null as string | null,\r\n    email: null as string | null,\r\n    isAuthMe: false,\r\n    checkbox: false,\r\n    captcha: null as string | null\r\n};\r\nexport type initialStateType = typeof initialState;\r\n\r\nlet authMe = (state = initialState, action:setUserDataAType | setAuthMeAType | setCaptchaAType):initialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n               ...action.data\r\n            }\r\n        case IS_AUTH_ME:\r\n            return {\r\n                ...state,\r\n                isAuthMe: action.isAuthMe\r\n            }\r\n        case CAPTCHA: {\r\n            return {\r\n                ...state,\r\n                captcha: action.captcha\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const authMeSuccessThunk = () => async(dispatch: Function) => {\r\n    let data = await authAPI.isAuthMe();\r\n    dispatch(setUserData({...data.data }));\r\n    (data.resultCode === 0) && dispatch(setAuthMe(true));\r\n}\r\n\r\ntype DataTypeLogin = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha:null }\r\nexport const putLoginPasswordThunk = (data:DataTypeLogin ) => async(dispatch: Function) => {\r\n    debugger;\r\n    let dataR = await authAPI.isLogin(data);\r\n    if (dataR.resultCode === 0) dispatch(authMeSuccessThunk());\r\n    else {\r\n        if(dataR.resultCode === 10) {dispatch(getCaptchaThunk())}\r\n        let catchError = dataR.messages.length > 0 ? dataR.messages[0] : 'Some errors';\r\n        dispatch(stopSubmit('login', { _error: catchError }));\r\n    }\r\n\r\n}\r\nexport const logoutThunk = () => async(dispatch: Function) => {\r\n    let dataR = await authAPI.isLogout();\r\n    (dataR.resultCode === 0) &&\r\n    dispatch(setAuthMe(false));\r\n    dispatch(setUserData({...dataR.data }));\r\n}\r\nconst getCaptchaThunk = () => async (dispatch: Function) => {\r\n    debugger;\r\n    let data = await securityAPI.getCaptchaURL();\r\n    dispatch(setCaptcha(data.url))\r\n}\r\n\r\n\r\nexport default authMe;","import React from 'react';\r\nimport cl from './InputChecker.module.css';\r\nexport const TextareaComp = ({ input, meta, ...props }) => {\r\n    return <>\r\n        <div className={(meta.error && meta.visited && !meta.active) && cl.error}>\r\n            <textarea  {...input} placeholder={props.placeholder}></textarea>\r\n        </div>\r\n            <span className={cl.messageError}>{ (meta.visited && !meta.active) &&  meta.error}</span>\r\n    \r\n    </>\r\n}\r\n\r\nexport const InputComp = ({ input, meta, ...props }) => {\r\n    return <>\r\n        <div className={(meta.error && meta.visited && !meta.active) && cl.error}>\r\n            <input  {...input} placeholder={props.placeholder}></input>\r\n        </div>\r\n            <span className={cl.messageError}>{ (meta.visited && !meta.active) &&  meta.error}</span>\r\n\r\n    </>\r\n}\r\n","export const required = (value) => {\r\n   return value ? undefined : 'Field is required';\r\n}\r\n\r\nexport let maxLengthC = (maxLen) => (value) => {\r\n   return value && value.length < maxLen ? undefined : `${maxLen} is reached`} ","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport let withAuthMe = (Component) => {\r\n    return class WrappedContainer extends React.Component {\r\n\r\n        render() {\r\n             if (this.props.isAuthMe) return <Component {...this.props} /> \r\n             else return <Redirect to='/login'></Redirect>\r\n                \r\n            \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport cl from './Dialog.module.css';\r\n\r\n\r\nconst Dialog = (props) =>{\r\n    \r\n    let path = '/dialogs/' + props.id;\r\nreturn (\r\n<div className={cl.dialog}>\r\n            <span> <img className={cl.avatar} src={props.avatar} alt='ava'/> </span>\r\n            <NavLink to={path} activeClassName={cl.active}>  {props.name} </NavLink></div>);\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport cl from './Message.module.css';\r\n\r\n\r\nconst Message = (props) =>{\r\n    return (\r\n    <div className={cl.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { authMeSuccessThunk } from '../../redux/authMe';\r\nimport { InputComp } from '../common/InputChecker/InputChecker';\r\nimport { maxLengthC, required } from '../common/Validators/Validators';\r\nimport { withAuthMe } from '../hoc/hoc';\r\nimport Dialog from './Dialog/Dialog';\r\nimport cl from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let onSubmit = (formData) => {\r\n        props.sendMessage(formData.newMessageText);\r\n    }\r\n\r\n\r\n    let dialogsGenerate = props.dialogsGenerate.map(d => <Dialog key={d.id} name={d.name} id={d.id} avatar={d.ava} />);\r\n    let messagesGenerate = props.messagesGenerate.map(m => <Message key={m.id} message={m.message} />);\r\n\r\n    return (\r\n        <div className={cl.dialogs}>\r\n            <div className={cl.dialogsItems}>\r\n                {dialogsGenerate}\r\n            </div>\r\n            <div className={cl.messages}>\r\n                {messagesGenerate}\r\n\r\n            </div>\r\n            <SendMessageRedux onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nlet maxLength10 = maxLengthC(10);\r\n\r\nlet SendMessage = (props) => {\r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name='newMessageText' type=\"text\" validate={[required, maxLength10]} component={InputComp} />\r\n            <button type=\"submit\" className={cl.sendMessage}>send</button>\r\n        </form>\r\n    </>;\r\n}\r\n\r\nlet SendMessageRedux = reduxForm({ form: 'sendMessage' })(SendMessage);\r\n\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return { isAuthMe: state.authMe.isAuthMe }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToPropsRedirect, { authMeSuccess: authMeSuccessThunk }),\r\n    withAuthMe\r\n)(Dialogs);\r\n\r\n","import { connect } from 'react-redux';\r\nimport { sendMessage } from '../../redux/messages-reducer';\r\nimport DialogsContainerHOCRedirect from './Dialogs';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsGenerate: state.messagesPage.dialogsUsersData,\r\n        messagesGenerate: state.messagesPage.messagesData\r\n    }\r\n}\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps, {sendMessage})(DialogsContainerHOCRedirect);\r\n\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport cl from './Friends.module.css';\r\n\r\n\r\nconst Friends = (props) => {\r\n\r\n    return (\r\n        <div className={cl.friend}>\r\n            <div className={cl.avatar}></div>\r\n            <div className={cl.name}>{props.name}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friends;\r\n\r\n/* <img src={props.avatar} className={cl.avatar} alt='avatar'></img> */ ","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Friends from './Friends/Friends';\r\nimport cl from './Navbar.module.css';\r\n\r\nconst Navbar = (props) => {\r\n  \r\n    let friendsListComp = props.friendsListComp.map (  fff => <Friends key={fff.id} id={fff.id} name={fff.name}/>);\r\n    return (\r\n        <nav className={cl.nav}>\r\n            <div className={cl.item}><NavLink to='/profile' activeClassName={cl.active}>\r\n                Profile</NavLink></div>\r\n            <div className={cl.item}><NavLink to='/dialogs' activeClassName={cl.active}>\r\n                Messages</NavLink></div>\r\n            <div className={cl.item}><NavLink to='/news' activeClassName={cl.active}>\r\n                News</NavLink></div>\r\n            <div className={cl.item}><NavLink to='/music' activeClassName={cl.active}>\r\n                Music</NavLink></div>\r\n            <div className={cl.item}><NavLink to='/settings' activeClassName={cl.active}>\r\n                Settings</NavLink></div>\r\n            <div className={cl.item}> <NavLink to='/users' activeClassName={cl.active}>\r\n                Users</NavLink></div>\r\n\r\n\r\n            <div className={cl.friendsList}> <h3 className={cl.friendsNav}>FRIENDS</h3> {friendsListComp} </div>\r\n            \r\n        </nav>\r\n    );\r\n   \r\n}\r\n\r\nexport default Navbar;","import { connect } from 'react-redux';\r\nimport Navbar from './Navbar';\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        friendsListComp:state.sideBar.friendsList\r\n    }\r\n}\r\n\r\n\r\nconst NavbarContainer = connect(mapStateToProps,{})(Navbar);\r\n\r\n\r\nexport default NavbarContainer;","import { UsersDataType } from './../types/types';\r\nimport { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst DATA = 'SETUSERS';\r\nconst CURPAGE = 'CURPAGE';\r\nconst TOTALCOUNT = 'TOTALCOUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLEIF';\r\nconst FOL_IS_FETCHING = 'FOLISFETCH';\r\n\r\nlet initialState = {\r\n    usersData: [] as Array<UsersDataType>,\r\n    currentPage: 1,\r\n    pageSize: 90,\r\n    totalCount: 10,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n};\r\nexport type InitialStateType = typeof initialState;\r\nlet usersReducer = (state = initialState, action: any):InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: state.usersData.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case DATA:\r\n            return {\r\n                ...state,\r\n                usersData: [...action.usersData]\r\n            };\r\n        case CURPAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case TOTALCOUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case FOL_IS_FETCHING:\r\n\r\n            let state02 = {\r\n                ...state,\r\n                followingInProgress: [...state.followingInProgress]\r\n            };\r\n\r\n            action.followingTF ?\r\n                state02.followingInProgress.push(action.userId) :\r\n                state02.followingInProgress = state02.followingInProgress.filter(userId => userId !== action.userId);\r\n\r\n            return state02;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype DoFollowActionType = { type: typeof FOLLOW, id: number }\r\ntype DoUnfollowActionType = { type: typeof UNFOLLOW, id: number }\r\ntype SetUsersActionType = { type: typeof DATA, usersData: Array<UsersDataType>}\r\ntype SetCurPageActionType = {type: typeof CURPAGE, currentPage: number }\r\ntype SetTotalCountActionType = { type: typeof TOTALCOUNT, totalCount: number }\r\ntype ToggleFetchingActionType = {type:typeof  TOGGLE_IS_FETCHING, isFetching: boolean}\r\ntype ToggleFollowingActionCreator = {type: typeof FOL_IS_FETCHING, followingTF: boolean, userId: number }\r\n\r\nexport let doUnfollow = (id: number): DoUnfollowActionType => ({ type: UNFOLLOW, id });\r\nexport let doFollow = (id: number): DoFollowActionType => ({ type: FOLLOW, id });\r\nexport let setUsers = (usersData: Array<UsersDataType>): SetUsersActionType => ({ type: DATA, usersData });\r\nexport let setCurPage = (currentPage: number): SetCurPageActionType => ({ type: CURPAGE, currentPage });\r\nexport let setTotalCount = (totalCount: number): SetTotalCountActionType => ({ type: TOTALCOUNT, totalCount });\r\nexport let toggleFetching = (isFetching: boolean): ToggleFetchingActionType => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport let toggleFollowing = (followingTF: boolean, userId: number): ToggleFollowingActionCreator => ({ type: FOL_IS_FETCHING, followingTF, userId });\r\n\r\n\r\nexport const setUsersThunk = (currentPage:number, pageSize: number) => async(dispatch: Function) => {\r\n    dispatch(toggleFetching(true));\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalCount(data.totalCount));\r\n}\r\nexport const changeCurPageThunk = (page: number, pageSize: number) => async(dispatch: Function) => {\r\n    dispatch(setCurPage(page));\r\n    dispatch(toggleFetching(true));\r\n    let data = await usersAPI.changeCurPage(page, pageSize)\r\n\r\n    dispatch(toggleFetching(false));\r\n    dispatch(setUsers(data.items));\r\n}\r\n\r\nexport const unFollowThunk = (userId: number) => async(dispatch: Function) => {\r\n\r\n    dispatch(toggleFollowing(true, userId));\r\n    let data = await usersAPI.unFollowDeleteRequest(userId);\r\n    data.resultCode === 0 && dispatch(doUnfollow(userId));\r\n    dispatch(toggleFollowing(false, userId));\r\n}\r\n\r\nexport const followThunk = (userId: number) => async(dispatch: Function) => {\r\n\r\n    dispatch(toggleFollowing(true, userId));\r\n    let data = await usersAPI.followPostRequest(userId);\r\n    data.resultCode === 0 && dispatch(doFollow(userId));\r\n    dispatch(toggleFollowing(false, userId));\r\n}\r\nexport default usersReducer;","import React from 'react';\r\nimport cl from './User.module.css';\r\nimport avaDefault from '../../../assets/images/zorro.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={cl.userItem}>\r\n                <NavLink to={'profile/' + props.user.id}><img className={cl.avatar}\r\n                    src={props.user.photos.small != null ? props.user.photos.small : avaDefault}\r\n                    alt='ava'></img>\r\n                </NavLink>\r\n\r\n    <div className={cl.country}>{props.user.id%3 === 0 \r\n    ? <div className={cl.off}>offline</div> : <div className={cl.on}>online</div> }</div>\r\n\r\n                <div className={cl.name}>{props.user.name}</div>\r\n                <div className={cl.stars}></div>\r\n    <div className={cl.lastMessage}>{props.user.status ? 'status: ' + props.user.status : '----'}</div>\r\n\r\n                <div>\r\n                    {\r\n                        props.user.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === props.user.id)} onClick={() => {\r\n                                props.doUnfollow(props.user.id);\r\n\r\n                            }} className={cl.statusFollow}>UNFOLLOW</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === props.user.id)} onClick={() => {\r\n                                props.doFollow(props.user.id);\r\n\r\n                            }} className={cl.statusFollow}>FOLLOW</button>}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport User from './User/User';\r\nimport cl from './Users.module.css';\r\n\r\nlet Users = (props) => {\r\n    return(\r\n        <>\r\n                \r\n                <div className={cl.usersItem}>\r\n                    {props.usersGenerate.map(user =>\r\n                        <User key={user.id}\r\n                            user={user}\r\n                            doFollow={props.doFollow}\r\n                            doUnfollow={props.doUnfollow}\r\n                            followingInProgress={props.followingInProgress}\r\n                            toggleFollowing={props.toggleFollowing}\r\n\r\n                        />)}\r\n                </div>\r\n            </>\r\n    );\r\n\r\n}\r\n\r\nexport default Users;\r\n\r\n","import React from 'react';\r\nimport preloader from './preloader.svg';\r\nimport cl from './Preloader.module.css';\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={cl.divPreloader}>\r\n            <img className={cl.preloader} src={preloader} alt=\"preloader\" />\r\n        </div>\r\n    );\r\n}\r\nexport default Preloader;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersPage = (state) => { return state.usersPage };\r\n\r\n\r\nexport const getUsersData = createSelector(getUsersPage, (usersPage) => { return usersPage.usersData; });\r\nexport const getCurrentPage = createSelector(getUsersPage, (usersPage) => { return usersPage.currentPage });\r\nexport const getTotalCount = createSelector(getUsersPage, (usersPage) => { return usersPage.totalCount });\r\nexport const getPageSize = createSelector(getUsersPage, (usersPage) => { return usersPage.pageSize });\r\nexport const getIsFetching = createSelector(getUsersPage, (usersPage) => { return usersPage.isFetching });\r\nexport const getFollowingInProgress = createSelector(getUsersPage, (usersPage) => { return usersPage.followingInProgress });","import React, { useState } from 'react';\r\nimport cl from './Pagination.module.css';\r\n\r\nlet Pagination = (props) => {\r\n    \r\n    let portionSize = 5;\r\n    let pagesQuantity = Math.ceil(props.totalCount / props.pageSize);\r\n    let pA = [];\r\n    for (let i = 1; i <= pagesQuantity; i++) {\r\n        pA.push(i);\r\n    }\r\n\r\n\r\n    const [ currentPortion, setCurrentPortion ] = useState(1);\r\n    let portionNumber = Math.ceil(pagesQuantity / portionSize);\r\n    let leftBorder = ((currentPortion - 1) * portionSize) + 1;\r\n    let rightBorder = portionSize * currentPortion;\r\n \r\n    return (\r\n        <>\r\n            <div className={cl.pages}>\r\n                {currentPortion > 1 && <button onClick={() => setCurrentPortion(currentPortion-1)}>minus</button> }\r\n                {pA\r\n                .filter(page => page >= leftBorder && page <= rightBorder)\r\n                .map(page => {\r\n                    return (\r\n                        <span  onClick={() => { props.changeCurPage(page) }} className={props.currentPage === page && cl.pageSelected || cl.page} key={page}>{page} </span>\r\n                    );\r\n                })\r\n                }\r\n                {portionNumber > currentPortion && <button onClick={() => setCurrentPortion(currentPortion+1)}>plus</button> }\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Pagination;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeCurPageThunk, setUsersThunk, unFollowThunk, followThunk } from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalCount, getUsersData } from '../../redux/users-selectors';\r\nimport cl from './../Users/Users.module.css'\r\nimport Pagination from '../common/Pagination/Pagination';\r\n\r\nclass UsersContainerClass extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setUsers(this.props.currentPage,this.props.pageSize);\r\n\r\n    }\r\n    changeCurPage = (page) => {\r\n        this.props.setCurPage(page,this.props.pageSize);\r\n    }\r\n    render() {\r\n        return <>\r\n        <div className={cl.userPage}>Choose your friends{this.props.isFetching && <span className={cl.preloader}><Preloader/></span>}</div>\r\n         <div className={cl.pagination}> <Pagination {...this.props} changeCurPage={this.changeCurPage} /> </div>\r\n        {!this.props.isFetching\r\n        && <Users\r\n                {...this.props}\r\n                \r\n                isFetching={this.props.isFetching}/>}\r\n            </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        usersGenerate: getUsersData(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalCount: getTotalCount(state),\r\n        pageSize: getPageSize(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    doFollow: followThunk,\r\n    doUnfollow: unFollowThunk,\r\n    setUsers: setUsersThunk,\r\n    setCurPage: changeCurPageThunk\r\n})(UsersContainerClass);;\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { userProfile } from \"../api/api\";\r\nimport { ProfileType } from \"../types/types\";\r\n\r\nconst SETPROF = 'SET-PROFILE';\r\nconst UPDATESTATUS = 'SET-STATUS';\r\nconst POSTF = 'POST-FORM-newPostText';\r\nconst UPLOAD_PHOTO = 'UPLOAD-PHOTO';\r\n\r\n\r\ntype PostsDataType = {\r\n    id: number,\r\n    message: string\r\n    likes: number\r\n};\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, message: 'Hello', likes: 15 },\r\n        { id: 2, message: 'Bonjour', likes: 30 },\r\n        { id: 3, message: 'Привет', likes: 15000 },\r\n    ] as Array<PostsDataType>,\r\n    newPostText: '',\r\n    profile: null as object | null,\r\n    status: 'no status'\r\n};\r\nexport type InitialStateType = typeof initialState;\r\nlet profileReducer = (state = initialState, action: SetProfileActionType | UpdateStatusActionType | PostFormActionType | UploadPhotoActionType):InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case POSTF:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.content,\r\n                likes: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost]\r\n            }\r\n        case SETPROF:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case UPLOAD_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.image }\r\n            };\r\n        case UPDATESTATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\ntype SetProfileActionType = {\r\n    type: typeof SETPROF\r\n    profile: object\r\n};\r\ntype UpdateStatusActionType = {\r\n    type: typeof UPDATESTATUS\r\n    status: string\r\n};\r\ntype PostFormActionType = {\r\n    type: typeof POSTF\r\n    content: string\r\n};\r\ntype UploadPhotoActionType = {\r\n    type: typeof UPLOAD_PHOTO\r\n    image: string\r\n};\r\n\r\nconst setProfile = (profile: ProfileType): SetProfileActionType => ({ type: SETPROF, profile });\r\nconst updateStatusAC = (status: string): UpdateStatusActionType => ({ type: UPDATESTATUS, status });\r\nexport const postForm = (content: string): PostFormActionType => ({ type: POSTF, content });\r\nconst uploadPhoto = (image: string): UploadPhotoActionType => ({ type: UPLOAD_PHOTO, image });\r\n\r\nexport const setProfileThunk = (userID: string) => async (dispatch: Function) => {\r\n    let data = await userProfile.showProfile(userID);\r\n    dispatch(setProfile(data));\r\n}\r\n\r\nexport const setStatusThunk = (status: string) => async (dispatch: Function) => {\r\n    let data = await userProfile.updateStatus(status);\r\n    (data.resultCode === 0) &&\r\n        dispatch(updateStatusAC(status))\r\n\r\n}\r\nexport const getStatusThunk = (userID: string) => async (dispatch: Function) => {\r\n    let data = await userProfile.getStatus(userID)\r\n    dispatch(updateStatusAC(data));\r\n}\r\n\r\nexport const uploadPhotoThunk = (image: string) => async (dispatch: Function) => {\r\n    let data = await userProfile.uploadPhoto(image);\r\n    (data.resultCode === 0) &&\r\n        dispatch(uploadPhoto(data.data.photos));\r\n}\r\n\r\nexport const updateProfileThunk = (profile: object) => async (dispatch: Function, getState: Function) => {\r\n    let data = await userProfile.updateProfile(profile);\r\n    debugger;\r\n    if (data.resultCode === 0) dispatch(setProfileThunk(getState().authMe.id))\r\n    else {\r\n        if (data.messages.length > 0) {\r\n            dispatch(stopSubmit('editProfile', { _error: data.messages }))\r\n            return Promise.reject(data.messages)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport cl from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={cl.item}>\r\n\r\n            <img src=\"https://static.tildacdn.com/tild3538-3762-4936-b162-656163363764/Icon.png\" alt=\"avatar\" />\r\n            <span>{props.message}</span>\r\n            <div>\r\n    <div>Likes --&gt; {props.likes}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextareaComp } from '../../common/InputChecker/InputChecker';\r\nimport { maxLengthC, required } from '../../common/Validators/Validators';\r\nimport cl from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nlet maxLength20 = maxLengthC(20);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsGenerate = props.postsGenerate.map(p => <Post key={p.id} message={p.message} likes={p.likes} />);\r\n    let onSubmit = (formData) => {\r\n        props.postForm(formData.newPostText);\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <FormMyPostR {...props} onSubmit={onSubmit} />\r\n\r\n            <div className={cl.posts}>\r\n                {postsGenerate}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nlet FormMyPost = (props) => {\r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextareaComp} name='newPostText' type=\"text\" validate={[required, maxLength20]} placeholder={'Write your post here...'} />\r\n            <button type=\"submit\" className={cl.addPost}>Add post</button>\r\n        </form>\r\n    </>\r\n}\r\n\r\nlet FormMyPostR = reduxForm({\r\n    form: 'post'\r\n})(FormMyPost);\r\n\r\nexport default MyPosts;","\r\nimport { connect } from 'react-redux';\r\nimport { postForm } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsGenerate: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, {postForm: postForm})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport cl from './ProfileInfo.module.scss';\r\n\r\nconst socialIcons = {\r\n    facebook: 'https://www.flaticon.com/svg/static/icons/svg/2111/2111393.svg',\r\n    website: 'https://www.flaticon.com/svg/static/icons/svg/2847/2847798.svg',\r\n    vk: 'https://www.flaticon.com/svg/static/icons/svg/2111/2111712.svg',\r\n    twitter: 'https://www.flaticon.com/svg/static/icons/svg/733/733579.svg',\r\n    instagram: 'https://www.flaticon.com/svg/static/icons/svg/174/174855.svg',\r\n    youtube: 'https://www.flaticon.com/svg/static/icons/svg/1384/1384060.svg',\r\n    github: 'https://www.flaticon.com/svg/static/icons/svg/733/733553.svg',\r\n    mainLink: 'https://www.flaticon.com/svg/static/icons/svg/2111/2111644.svg'\r\n\r\n};\r\n\r\n\r\nconst Contact = ({ property, value }) => {\r\n    let sIcon;\r\n   let socialChoosed = Object.keys(socialIcons).forEach(key => { if(key===property)  sIcon = socialIcons[key]});\r\n    return (<>\r\n        {value\r\n            && <span><a href={value}><img className={cl.socialIcon}\r\n                    src={sIcon} alt=\"\" /></a>\r\n                 </span>\r\n            \r\n            \r\n            }\r\n{/* <div>{property} : {value}</div> */}\r\n    </>)\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { InputComp } from '../../../common/InputChecker/InputChecker';\r\nimport cl from './../ProfileInfo.module.scss';\r\nimport checker from './../../../common/InputChecker/InputChecker.module.css';\r\nconst ProfileEditForm = (props) => {\r\n    let contactsArray = Object.keys(props.profileData.contacts).map(key => {\r\n        return <div key={key}>{fieldCreator('contacts.' + key , InputComp, 'text' )}</div>\r\n    })\r\n\r\n        return (<form onSubmit={props.handleSubmit} className={cl.editData}>\r\n            <div>{props.error\r\n            && <div className={checker.commonError}> {props.error} </div>}</div>\r\n        <div>Here is our form for editing</div>\r\n        <div> Your full name: {fieldCreator('fullName', InputComp, 'text')} </div>\r\n        <div> About me: {fieldCreator('aboutMe', InputComp, 'text' )} </div>\r\n\r\n        <div> {fieldCreator('lookingForAJob', 'input', 'checkbox')} Looking for a job?</div>\r\n        <div> Description: {fieldCreator('lookingForAJobDescription', InputComp, 'text' )} </div>\r\n        <div> Contacts: {contactsArray} </div>\r\n        <button>Save changes</button>\r\n        \r\n        </form>\r\n        );\r\n}\r\n\r\nlet fieldCreator = (name, component, type, validate = []) => {\r\n    return (<Field name={name} component={component} type={type} placeholder={name} validate={validate}></Field>)\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'editProfile',\r\n    enableReinitialize: true\r\n})(ProfileEditForm);","import React, { useState } from 'react';\r\nimport Contact from '../Contacts';\r\nimport ProfileEditForm from './ProfileEditForm';\r\nimport sad from '../../../../assets/images/sad.png';\r\nimport happy from '../../../../assets/images/happy.png';\r\nimport cl from './../ProfileInfo.module.scss';\r\n\r\nconst ProfileInfoEdit = ({ owner, profileData, updateProfile }) => {\r\n    let [editMode, changeEditMode] = useState(false);\r\n    let onSubmit = (dataFlow) => {\r\n        let promise = updateProfile(dataFlow);\r\n        promise.then(() => changeEditMode(false));\r\n\r\n    }\r\n    return (<>\r\n        <div>\r\n            {\r\n                (editMode && owner)\r\n                    ? <ProfileEditForm\r\n                        initialValues={profileData}\r\n                        profileData={profileData}\r\n                        onSubmit={onSubmit} />\r\n                    : owner &&\r\n                    <div>\r\n                        <button className={cl.editButton} onClick={() => changeEditMode(true)}>Edit Profile</button>\r\n                        <div className={cl.fullname}>{profileData.fullName}</div>\r\n                        <div className={cl.aboutMe}>{profileData.aboutMe}</div>\r\n                        <div className={cl.contacts}>\r\n                            {Object.keys(profileData.contacts).map((key) => {\r\n                                return <Contact key={key} property={key} value={profileData.contacts[key]} />\r\n                            })\r\n                            }\r\n                        </div>\r\n\r\n                        <div>lookingForAJob:  <img src={profileData.lookingForAJob ? happy : sad} style={{ width: '50px', height: '50px' }} alt=\"\"></img> </div>\r\n                        <div>Description: {profileData.lookingForAJobDescription}</div>\r\n\r\n                    </div>\r\n            }\r\n        </div>\r\n    </>)\r\n}\r\nexport default ProfileInfoEdit;","import React from 'react';\r\nimport cl from './ProfileInfo.module.scss';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport { useState } from 'react';\r\nimport avaDefault from './../../../assets/startPage/av.jpg';\r\nimport ProfileInfoEdit from './ProfileInfoEdit/ProfileInfoEdit';\r\n\r\n\r\n\r\n\r\nconst ProfileInfo = React.memo((props) => {\r\n  \r\n    const { checkedAuth, profileData, uploadPhoto, userId, updateProfile } = props;\r\n    let [editMode, changeEditMode] = useState(false);\r\n    let [photoFile, changePhotoFile] = useState('');\r\n    if (!props.profileData) {\r\n        return <Preloader />\r\n    }\r\n    let choosePhotoEdition = () => {\r\n        changeEditMode(true);\r\n    }\r\n    let choosedPhoto = (file) => {\r\n        changePhotoFile(file);\r\n    }\r\n    let uploadPhotoPreparation = () => {\r\n        uploadPhoto(photoFile);\r\n        changeEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <div className={cl.content}>\r\n            <div className={cl.description}>\r\n\r\n                {(editMode && (checkedAuth === userId || !userId))\r\n                    ? (<div>\r\n                        <input type=\"file\" accept=\"image/*\" onChange={(e) => choosedPhoto(e.target.files[0])} />\r\n                        <input onClick={uploadPhotoPreparation} type=\"button\" value='Upload' />\r\n                    </div>)\r\n                    :\r\n                    <img style={{ width: '100px', height: '100px' }} src={profileData.photos.small ? profileData.photos.small : avaDefault} alt=\"avatar\" onDoubleClick={choosePhotoEdition} />\r\n                }\r\n                <ProfileInfoEdit\r\n                    owner={checkedAuth === userId || !userId}\r\n                    profileData={profileData}\r\n                    updateProfile={updateProfile} />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport cl from './ProfileStatus.module.css';\r\n\r\n\r\n let ProfileStatusHook = (props) => {\r\n    let [editMode, changeEditMode] = useState(false);\r\n    let [status,setStatus] = useState(props.status);\r\n\r\n\r\n    let editStatus = () =>  changeEditMode(true);\r\n    let onChange = (event) => setStatus(event.target.value);\r\n    \r\n   useEffect(() => { setStatus(props.status)},[props.status]);\r\n\r\n    let readyStatus = () => {\r\n        changeEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n  \r\n        return (\r\n            <div className={cl.content}>\r\n                <span className={cl.status}>Status:</span>\r\n                { \r\n            \r\n                    editMode\r\n                    ? <div className={cl.editionVersion}>\r\n                        <input onBlur={readyStatus} autoFocus={true} type=\"text\" value={status} onChange={onChange} ></input>\r\n                    </div>\r\n                    : <div >\r\n                        <span className={cl.readyStatus} \r\n                        onDoubleClick={() => (!props.match.params.userId) \r\n                        ? editStatus() \r\n                        : false}>{props.status || '---------'}</span> \r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default ProfileStatusHook;\r\n","import React from 'react';\r\nimport cl from './ProfileStatus.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n            editMode: false,\r\n            status: this.props.status\r\n        }\r\n    editStatus = () => {\r\n        console.log(this.state.status)\r\n        this.setState({ editMode: true });\r\n    }\r\n    onChange = (event) => {\r\n        this.setState({status: event.target.value})\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.status !== prevProps.status){\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n    readyStatus = () => {\r\n        this.setState({ editMode: false });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={cl.content}>\r\n                <span className={cl.status}>Status:</span>\r\n                {this.state.editMode\r\n                    ? <div className={cl.editionVersion}>\r\n                        <input onBlur={this.readyStatus} autoFocus={true} type=\"text\" value={this.state.status} onChange={this.onChange} ></input>\r\n                    </div>\r\n                    : <div >\r\n                        <span className={cl.readyStatus} onDoubleClick={this.editStatus}>{this.props.status || '---------'}</span> \r\n                       \r\n                    </div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport cl from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus'; //class component\r\nimport ProfileStatusHook from './ProfileStatus/ProfileStatusHook';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={cl.content}>\r\n            <ProfileInfo\r\n                profileData={props.profile}\r\n                userId={props.match.params.userId}\r\n                uploadPhoto={props.uploadPhoto}\r\n                checkedAuth={props.authorizedUser}\r\n                updateProfile={props.updateProfile} />\r\n\r\n            <ProfileStatusHook {...props} />\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getStatusThunk, postForm, setProfileThunk, setStatusThunk, updateProfileThunk, uploadPhotoThunk } from '../../redux/profile-reducer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { withAuthMe } from '../hoc/hoc';\r\nimport Profile from './Profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile = () => {\r\n        let userID = this.props.match.params.userId;\r\n        if(!userID){\r\n            userID = this.props.authorizedUser;\r\n            if(!userID) return<Preloader/>\r\n        } \r\n        this.props.setProfile(userID);\r\n        this.props.getStatus(userID);\r\n  }\r\n    componentDidMount() {  \r\n        this.refreshProfile();\r\n    }\r\n componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.match.params.userId != this.props.match.params.userId){\r\n        this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        return <Profile {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return { isAuthMe: state.authMe.isAuthMe }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUser: state.authMe.id,\r\n        authorized: state.authMe.isAuthMe\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setProfile: setProfileThunk,\r\n        updateStatus: setStatusThunk,\r\n        getStatus: getStatusThunk,\r\n        postForm: postForm,\r\n        uploadPhoto: uploadPhotoThunk,\r\n        updateProfile: updateProfileThunk\r\n        \r\n    }),\r\n    withRouter,\r\n    connect(mapStateToPropsRedirect, {}),\r\n    withAuthMe\r\n)(ProfileContainer);\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport cl from './Header.module.css';\r\nimport logo from './../../assets/startPage/logo2.jpg';\r\n\r\nconst Header = (props) => {\r\n    return (<>\r\n\r\n        <header className={cl.header}>\r\n            <div className={cl.loginPhrase}>\r\n                {props.isAuthMe\r\n                    ? <div onClick={props.logout} className={cl.userLogin}>Click to logOut </div>\r\n                    : <div className={cl.logIn}><NavLink  to='login/'><div>Log In</div> </NavLink></div>\r\n                }\r\n            </div>\r\n            <div className={cl.name}>HellDream</div>\r\n            <div><img className={cl.logo} src={logo} alt=\"logo\" /></div>\r\n\r\n        </header>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logoutThunk } from '../../redux/authMe';\r\nimport Header from './Header';\r\n\r\nclass HeaderCl extends React.Component {\r\n   \r\n    render() {\r\n        return <> <Header {...this.props} /> </>\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n         ...state.authMe\r\n    }\r\n}\r\n\r\nlet HeaderContainer = connect(mapStateToProps, {\r\n    logout: logoutThunk\r\n})(HeaderCl);\r\nexport default HeaderContainer;","import cl from '../Login/Login.module.css';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { InputComp } from '../common/InputChecker/InputChecker';\r\nimport { maxLengthC, required } from '../common/Validators/Validators';\r\nimport checker from './../common/InputChecker/InputChecker.module.css';\r\n\r\nconst maxLength30 = maxLengthC(30);\r\n\r\nlet LoginForm = (props) => { \r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field name='login' component={InputComp} type=\"text\" placeholder={'login'} validate={[required, maxLength30]} /></div>\r\n            <div><Field name='password' component={InputComp} type=\"text\" placeholder={'password'} validate={[required, maxLength30]} /></div>\r\n            <div><Field name='checkbox' component='input' type=\"checkbox\" />Remember Me</div>\r\n            {props.error && <div className={checker.commonError}> {props.error} </div>}\r\n            {props.captcha && <div><img src={props.captcha} /> \r\n             <Field name='symbols' component={InputComp} type=\"text\" placeholder={'symbols'} /> </div> }\r\n            <div><button>Login</button></div>\r\n        </form>\r\n    </>\r\n}\r\n\r\nexport default reduxForm({ form: 'login' })(LoginForm);\r\n","import cl from '../Login/Login.module.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { putLoginPasswordThunk } from '../../redux/authMe';\r\nimport LoginForm from './LoginForm';\r\n\r\n\r\n\r\nlet Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.isLogin(formData);\r\n    }\r\n    return <>\r\n    <div className={cl.starter}>LOGIN</div>\r\n    {props.authMe\r\n        ?<div >You are login successfully</div>\r\n        :<LoginForm onSubmit={onSubmit} captcha={props.captcha}/>\r\n    }   \r\n    </>\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return { \r\n        authMe: state.authMe.isAuthMe,\r\n        captcha: state.authMe.captcha }\r\n}\r\n\r\nlet LoginFormContainer = connect(mapStateToProps, {\r\n    isLogin: putLoginPasswordThunk\r\n})(Login);\r\nexport default LoginFormContainer;","import { authMeSuccessThunk } from \"./authMe\";\r\n\r\nconst SET_INIT = 'SET-INITIALIZE';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\nexport type InitialStateType = typeof initialState;\r\nlet appInitialization = (state = initialState, action:setInitializeActionType):InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_INIT:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype setInitializeActionType = { type: typeof SET_INIT };\r\n\r\nexport let setInitialize = ():setInitializeActionType => ({ type: SET_INIT });\r\n\r\n\r\nexport const setInitializeThunk = () => async(dispatch: Function) => {\r\n    await dispatch(authMeSuccessThunk());\r\n    dispatch(setInitialize());\r\n}\r\n\r\n\r\nexport default appInitialization;","import React from 'react';\r\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\r\nimport './App.css';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport NavbarContainer from './components/Navbar/NavbarContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginFormContainer from './components/Login/Login';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { setInitializeThunk } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\n\r\nclass App extends React.Component {\r\n    \r\ncomponentDidMount(){\r\n        this.props.setInitialize();\r\n}\r\n    PostsComp = () => <ProfileContainer store={this.props.store} />;\r\n    DialogsMessagesComp = () => <DialogsContainer store={this.props.store} />;\r\n    UsersComp = () => <UsersContainer store={this.props.store} />;\r\n    LoginFormContainerCom = () => <LoginFormContainer store={this.props.store} />;\r\n    render() {\r\n        if(!this.props.initialized){ return <Preloader/>}\r\n        return (\r\n            \r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer />\r\n                    <NavbarContainer />\r\n                    <div className='app-wrapper-content'>\r\n                        <Route path='/dialogs' render={this.DialogsMessagesComp} />\r\n                        <Route path='/profile/:userId?' render={this.PostsComp} />\r\n                        <Route path='/news' render={News} />\r\n                        <Route path='/music' render={Music} />\r\n                        <Route path='/settings' render={Settings} />\r\n                        <Route path='/users' render={this.UsersComp} />\r\n                        <Route path='/login' render={this.LoginFormContainerCom} />\r\n                    </div>\r\n\r\n                </div>\r\n           \r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        initialized: state.appInit.initialized\r\n    })\r\n}\r\n\r\nlet AppMain = compose(\r\n   withRouter,\r\n    connect(mapStateToProps,{ setInitialize: setInitializeThunk})    \r\n)(App);\r\nexport default AppMain;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","type FriendsList = {\r\n    id: number\r\n    name: string\r\n}\r\nlet initialState = {\r\n    friendsList: [\r\n        { id: 1, name: 'Zorro' },\r\n        { id: 2, name: 'Lyubov' },\r\n        { id: 3, name: 'Kuscherenko' }\r\n    ] as Array<FriendsList>\r\n};\r\nexport type initialStateType = typeof initialState;\r\nlet sideBarReducer = (state = initialState, action: any):initialStateType => {\r\n    return state;\r\n}\r\nexport default sideBarReducer;","import authMe from \"./authMe\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sideBarReducer from \"./sideBar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appInitialization from \"./app-reducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sideBar: sideBarReducer,\r\n    usersPage: usersReducer,\r\n    authMe: authMe,\r\n    appInit: appInitialization,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware))); //створили об'єкт store\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport AppMain from './App';\r\n\r\n\r\n\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n            <AppMain />\r\n            </HashRouter>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n// renderEntireTree(store.getState()); //вже викликаємо\r\n//redux не вертає state змінений, тож викликаємо анонімну функцію, яка отримає зміни і віддасть rerender\r\n// store.subscribe(() => {    переходить у власність виконання connect from  'react-redux'\r\n//     // let newState = store.getState();\r\n//     renderEntireTree();\r\n// });\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editionVersion\":\"ProfileStatus_editionVersion__34QJ5\",\"status\":\"ProfileStatus_status__PRDP4\",\"readyStatus\":\"ProfileStatus_readyStatus__1-qBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"InputChecker_error__3bOFz\",\"messageError\":\"InputChecker_messageError__2L7eE\",\"commonError\":\"InputChecker_commonError__15Qry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3b1l2\",\"name\":\"Header_name__wsK4x\",\"header\":\"Header_header__10dxk\",\"loginPhrase\":\"Header_loginPhrase__3mCng\",\"userLogin\":\"Header_userLogin__230Sn\",\"logIn\":\"Header_logIn__IbfsR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPage\":\"Users_userPage__3pdtU\",\"butGET\":\"Users_butGET__3mBVF\",\"preloader\":\"Users_preloader__3ube4\",\"pagination\":\"Users_pagination__1ZtKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2BwxY\",\"dialogsItems\":\"Dialogs_dialogsItems__5NlB3\",\"dialog\":\"Dialogs_dialog__39fd-\",\"message\":\"Dialogs_message__cuXq7\",\"active\":\"Dialogs_active__17luP\"};","module.exports = __webpack_public_path__ + \"static/media/zorro.097a33ad.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__3izJD\",\"active\":\"Dialog_active__1j-Og\",\"avatar\":\"Dialog_avatar__1n0LU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Friends_avatar__2iBkW\",\"friend\":\"Friends_friend__1Hlqs\",\"name\":\"Friends_name__YkjbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Pagination_pages__3ksA0\",\"page\":\"Pagination_page__1iloC\",\"pageSelected\":\"Pagination_pageSelected__EFH4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starter\":\"Login_starter__1tZcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__UMRl1\",\"divPreloader\":\"Preloader_divPreloader__3iYxB\"};"],"sourceRoot":""}