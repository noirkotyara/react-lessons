{"version":3,"sources":["redux/profile-selectors.ts","components/Profile/ProfileInfo/ProfileInfo.module.scss","assets/startPage/av.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileStatus/ProfileStatus.module.css","../node_modules/antd/es/_util/getRenderPropValue.js","../node_modules/antd/es/popover/index.js","components/Profile/MyPosts/FormMyPost.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","../node_modules/@ant-design/icons-svg/es/asn/SyncOutlined.js","../node_modules/@ant-design/icons/es/icons/SyncOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/SmileOutlined.js","../node_modules/@ant-design/icons/es/icons/SmileOutlined.js","components/Profile/ProfileStatus/ProfileStatusHook.tsx","components/Profile/ProfileInfo/Contacts.tsx","components/Profile/ProfileInfo/ProfileInfoEdit/ProfileEditForm.tsx","components/Profile/ProfileInfo/ProfileInfoEdit/ProfileInfoEdit.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfilePage.tsx"],"names":["getProfileData","state","profilePage","getPostsData","createSelector","postsData","getProfileObjectData","profile","getStatus","status","module","exports","getRenderPropValue","propValue","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Popover","React","_a","ref","customizePrefixCls","prefixCls","title","content","otherProps","getPrefixCls","ConfigContext","Tooltip","_extends","overlay","className","concat","getOverlay","displayName","defaultProps","placement","transitionName","trigger","mouseEnterDelay","mouseLeaveDelay","overlayStyle","maxLength20","maxLengthC","FormMyPostR","reduxForm","form","props","onSubmit","handleSubmit","Field","component","InputComp","name","type","validate","required","placeholder","cl","addPost","Post","item","src","alt","message","likes","MyPosts","useSelector","dispatchR","useDispatch","postsGenerate","map","key","id","formData","actions","postForm","newPostText","posts","SyncOutlined","AntdIcon","assign","icon","SyncOutlinedSvg","SmileOutlined","SmileOutlinedSvg","ProfileStatusWithHook","dispatch","useState","editMode","changeEditMode","statusState","setStatus","useEffect","editionVersion","onBlur","setStatusThunk","autoFocus","value","onChange","event","target","readyStatus","onDoubleClick","isUserAuth","socialIcons","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Contact","sIcon","property","keys","forEach","href","socialIcon","fieldCreator","enableReinitialize","profileData","contactsArray","contacts","editData","error","checker","commonError","ProfileInfoEdit","owner","initialValues","dataFlow","updateProfileThunk","then","reset","aboutMe","span","offset","aboutMeContent","links","editButton","onClick","ProfileInfoMemoized","memo","userId","authID","getAuthID","history","useHistory","photoFile","changePhotoFile","Preloader","avatarFullNameStatus","avatarImage","photos","small","avaDefault","colWithFullName","fullname","fullName","lookingForAJob","spin","rotate","lookingForAJobDescription","accept","files","choosedPhoto","uploadPhotoThunk","description","startChatThunk","push","pathname","fromDashboard","startMessaging","Profile","match","params","compose","withRouter","withAuthMe","authorizedUser","refreshProfile","userID","setProfileThunk","getStatusThunk"],"mappings":"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","file":"static/js/4.7c85deff.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\nimport { AppStateType } from \"./redux-store\";\r\n\r\nconst getProfileData = (state: AppStateType) => { return state.profilePage };\r\n\r\nexport const getPostsData = createSelector(getProfileData, (profilePage) => { return profilePage.postsData });\r\nexport const getProfileObjectData = createSelector(getProfileData, (profilePage) => { return profilePage.profile });\r\nexport const getStatus = createSelector(getProfileData, (profilePage) => { return profilePage.status });\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__3GDnK\",\"contacts\":\"ProfileInfo_contacts__37vHF\",\"fullname\":\"ProfileInfo_fullname__3dF7s\",\"colWithFullName\":\"ProfileInfo_colWithFullName__3lzJh\",\"socialIcon\":\"ProfileInfo_socialIcon__GBk5o\",\"avatarFullNameStatus\":\"ProfileInfo_avatarFullNameStatus__29b5J\",\"aboutMe\":\"ProfileInfo_aboutMe__22GW8\",\"avatarImage\":\"ProfileInfo_avatarImage__3DVSz\",\"links\":\"ProfileInfo_links__3PGGK\",\"editData\":\"ProfileInfo_editData__3bG9g\"};","module.exports = __webpack_public_path__ + \"static/media/av.3322ac59.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"MyPosts_addPost__1exZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2DfE4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editionVersion\":\"ProfileStatus_editionVersion__34QJ5\",\"status\":\"ProfileStatus_status__PRDP4\",\"readyStatus\":\"ProfileStatus_readyStatus__1-qBM\"};","export var getRenderPropValue = function getRenderPropValue(propValue) {\n  if (!propValue) {\n    return null;\n  }\n\n  var isRenderFunction = typeof propValue === 'function';\n\n  if (isRenderFunction) {\n    return propValue();\n  }\n\n  return propValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nimport { ConfigContext } from '../config-provider';\nimport { getRenderPropValue } from '../_util/getRenderPropValue';\nvar Popover = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var customizePrefixCls = _a.prefixCls,\n      title = _a.title,\n      content = _a.content,\n      otherProps = __rest(_a, [\"prefixCls\", \"title\", \"content\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var getOverlay = function getOverlay(prefixCls) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, title && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-title\")\n    }, getRenderPropValue(title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-inner-content\")\n    }, getRenderPropValue(content)));\n  };\n\n  var prefixCls = getPrefixCls('popover', customizePrefixCls);\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({}, otherProps, {\n    prefixCls: prefixCls,\n    ref: ref,\n    overlay: getOverlay(prefixCls)\n  }));\n});\nPopover.displayName = 'Popover';\nPopover.defaultProps = {\n  placement: 'top',\n  transitionName: 'zoom-big',\n  trigger: 'hover',\n  mouseEnterDelay: 0.1,\n  mouseLeaveDelay: 0.1,\n  overlayStyle: {}\n};\nexport default Popover;","import React from 'react';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { InputComp } from '../../common/InputChecker/InputChecker';\r\nimport { maxLengthC, required } from '../../common/Validators/Validators';\r\nimport cl from './MyPosts.module.css';\r\nimport { FormPostType } from './MyPosts';\r\n\r\nlet maxLength20 = maxLengthC(20);\r\n//<InjectedFormProps<FormPostType, OwnProps> & OwnProps>\r\nlet FormMyPost: React.FC<InjectedFormProps<FormPostType>> = (props) => {\r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={InputComp} name='newPostText' type=\"text\" validate={[required, maxLength20]} placeholder={'Write your post here...'} />\r\n            <button type=\"submit\" className={cl.addPost}>Add post</button>\r\n        </form>\r\n    </>\r\n}\r\n\r\nexport let FormMyPostR = reduxForm<FormPostType>({\r\n    form: 'post'\r\n})(FormMyPost)\r\n","import React from 'react';\r\nimport cl from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    key: number\r\n    message: string\r\n    likes: number\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={cl.item}>\r\n\r\n            <img src=\"https://static.tildacdn.com/tild3538-3762-4936-b162-656163363764/Icon.png\" alt=\"avatar\" />\r\n            <span>{props.message}</span>\r\n            <div>\r\n    <div>Likes --&gt; {props.likes}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actions, PostsDataType } from '../../../redux/profile-reducer';\r\nimport { getPostsData } from '../../../redux/profile-selectors';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport { FormMyPostR } from './FormMyPost';\r\nimport cl from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\n\r\nexport const MyPosts: React.FC<{}> = () => {\r\n\r\n    const postsData = useSelector<AppStateType, Array<PostsDataType>>(getPostsData)\r\n    const dispatchR = useDispatch() \r\n    let postsGenerate = postsData.map(p => <Post key={p.id} message={p.message} likes={p.likes} />);\r\n    let onSubmit = (formData: FormPostType) => {\r\n        dispatchR(actions.postForm(formData.newPostText))\r\n    }\r\n    return (\r\n        <div>\r\n            <FormMyPostR onSubmit={onSubmit} />\r\n            <div className={cl.posts}>\r\n                {postsGenerate}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n//types \r\nexport type FormPostType = {\r\n    newPostText: string\r\n}\r\n","// This icon file is generated automatically.\nvar SyncOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 01755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 01512.1 856a342.24 342.24 0 01-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 00-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 00-8-8.2z\" } }] }, \"name\": \"sync\", \"theme\": \"outlined\" };\nexport default SyncOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SyncOutlinedSvg from \"@ant-design/icons-svg/es/asn/SyncOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SyncOutlined = function SyncOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SyncOutlinedSvg\n  }));\n};\n\nSyncOutlined.displayName = 'SyncOutlined';\nexport default /*#__PURE__*/React.forwardRef(SyncOutlined);","// This icon file is generated automatically.\nvar SmileOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M288 421a48 48 0 1096 0 48 48 0 10-96 0zm352 0a48 48 0 1096 0 48 48 0 10-96 0zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm263 711c-34.2 34.2-74 61-118.3 79.8C611 874.2 562.3 884 512 884c-50.3 0-99-9.8-144.8-29.2A370.4 370.4 0 01248.9 775c-34.2-34.2-61-74-79.8-118.3C149.8 611 140 562.3 140 512s9.8-99 29.2-144.8A370.4 370.4 0 01249 248.9c34.2-34.2 74-61 118.3-79.8C413 149.8 461.7 140 512 140c50.3 0 99 9.8 144.8 29.2A370.4 370.4 0 01775.1 249c34.2 34.2 61 74 79.8 118.3C874.2 413 884 461.7 884 512s-9.8 99-29.2 144.8A368.89 368.89 0 01775 775zM664 533h-48.1c-4.2 0-7.8 3.2-8.1 7.4C604 589.9 562.5 629 512 629s-92.1-39.1-95.8-88.6c-.3-4.2-3.9-7.4-8.1-7.4H360a8 8 0 00-8 8.4c4.4 84.3 74.5 151.6 160 151.6s155.6-67.3 160-151.6a8 8 0 00-8-8.4z\" } }] }, \"name\": \"smile\", \"theme\": \"outlined\" };\nexport default SmileOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SmileOutlinedSvg from \"@ant-design/icons-svg/es/asn/SmileOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SmileOutlined = function SmileOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SmileOutlinedSvg\n  }));\n};\n\nSmileOutlined.displayName = 'SmileOutlined';\nexport default /*#__PURE__*/React.forwardRef(SmileOutlined);","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setStatusThunk } from '../../../redux/profile-reducer';\r\nimport { getStatus } from '../../../redux/profile-selectors';\r\nimport cl from './ProfileStatus.module.css';\r\n\r\ntype PropsType = {\r\n    isUserAuth: number\r\n}\r\n\r\n export const ProfileStatusWithHook: React.FC<PropsType> = (props) => {\r\n    \r\n    const status = useSelector(getStatus)\r\n    const dispatch = useDispatch()\r\n\r\n    let [editMode, changeEditMode] = useState(false);\r\n    let [statusState,setStatus] = useState(status);\r\n\r\n\r\n    let editStatus = () =>  changeEditMode(true);\r\n    let onChange = (event: ChangeEvent<HTMLInputElement>) => setStatus(event.target.value);\r\n    \r\n   useEffect(() => { setStatus(status)},[status]);\r\n\r\n    let readyStatus = () => {\r\n        changeEditMode(false);\r\n        dispatch(setStatusThunk(statusState))\r\n    }\r\n  \r\n        return (\r\n            <div className={cl.content}>\r\n                <span className={cl.status}>Status:</span>\r\n                { \r\n                    editMode\r\n                    ? <span className={cl.editionVersion}>\r\n                        <input onBlur={readyStatus} autoFocus={true} type=\"text\" value={statusState} onChange={onChange} ></input>\r\n                    </span>\r\n                    : <span>\r\n                        <span className={cl.readyStatus} \r\n                        onDoubleClick={() => (!props.isUserAuth) \r\n                        ? editStatus() \r\n                        : false}>{status || '---------'}</span> \r\n                    </span>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { ContactsType } from '../../../types/types';\r\nimport cl from './ProfileInfo.module.scss';\r\n\r\nconst socialIcons = {\r\n    facebook: 'https://www.flaticon.com/svg/static/icons/svg/2111/2111393.svg',\r\n    website: 'https://www.flaticon.com/svg/static/icons/svg/2847/2847798.svg',\r\n    vk: 'https://www.flaticon.com/svg/static/icons/svg/2111/2111712.svg',\r\n    twitter: 'https://www.flaticon.com/svg/static/icons/svg/733/733579.svg',\r\n    instagram: 'https://www.flaticon.com/svg/static/icons/svg/174/174855.svg',\r\n    youtube: 'https://www.flaticon.com/svg/static/icons/svg/1384/1384060.svg',\r\n    github: 'https://www.flaticon.com/svg/static/icons/svg/733/733553.svg',\r\n    mainLink: 'https://www.flaticon.com/svg/static/icons/svg/2111/2111644.svg'\r\n\r\n};\r\n\r\ntype OwnPropsType = {\r\n    property: string\r\n    value: string\r\n}\r\n\r\nconst Contact: React.FC<OwnPropsType> = ({ property, value }) => {\r\n    let sIcon;\r\n    Object\r\n    .keys(socialIcons)\r\n    .forEach(key => { \r\n        if(key===property)  \r\n        sIcon = socialIcons[key as keyof ContactsType]});\r\n    return (<>\r\n        {value\r\n            && <span><a href={value}><img className={cl.socialIcon}\r\n                    src={sIcon} alt=\"\" /></a>\r\n                 </span>\r\n            }\r\n    </>)\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { Field, InjectedFormProps, reduxForm, WrappedFieldProps } from 'redux-form';\r\nimport { InputComp } from '../../../common/InputChecker/InputChecker';\r\nimport cl from './../ProfileInfo.module.scss';\r\nimport checker from './../../../common/InputChecker/InputChecker.module.css';\r\nimport { ProfileType } from '../../../../types/types';\r\nimport { getProfileObjectData } from '../../../../redux/profile-selectors';\r\nimport { AppStateType } from '../../../../redux/redux-store';\r\n\r\n\r\nconst ProfileEditForm: React.FC<InjectedFormProps<FormProfileType>> = (props) => {\r\n    \r\n    const profileData = useSelector<AppStateType, ProfileType>(getProfileObjectData)\r\n    \r\n    let contactsArray = Object.keys(profileData.contacts).map(key => {\r\n        return <div key={key}>{fieldCreator('contacts.' + key, InputComp, 'text')}</div>\r\n    })\r\n\r\n    return (<form onSubmit={props.handleSubmit} className={cl.editData}>\r\n        <div>{props.error\r\n            && <div className={checker.commonError}> {props.error} </div>}</div>\r\n        <div>Here is our form for editing</div>\r\n        <div> Your full name: {fieldCreator('fullName', InputComp, 'text')} </div>\r\n        <div> About me: {fieldCreator('aboutMe', InputComp, 'text')} </div>\r\n\r\n        <div> {fieldCreator('lookingForAJob', 'input', 'checkbox')} Looking for a job?</div>\r\n        <div> Description: {fieldCreator('lookingForAJobDescription', InputComp, 'text')} </div>\r\n        <div> Contacts: {contactsArray} </div>\r\n        <button>Save changes</button>\r\n\r\n    </form>\r\n    );\r\n}\r\n\r\n\r\nlet fieldCreator = (name: string,\r\n    component: React.FC<WrappedFieldProps & {placeholder: string}> | string,\r\n    type: string,\r\n    validate = []) => {\r\n    return (<Field name={name} component={component} type={type} placeholder={name} validate={validate}></Field>)\r\n}\r\n\r\nexport default reduxForm<FormProfileType>({\r\n    form: 'editProfile',\r\n    enableReinitialize: true\r\n})(ProfileEditForm);\r\n\r\nexport type FormProfileType = ProfileType\r\n","import React, { Dispatch, useState } from 'react';\r\nimport Contact from '../Contacts';\r\nimport ProfileEditForm, { FormProfileType } from './ProfileEditForm';\r\nimport sad from '../../../../assets/images/sad.png';\r\nimport happy from '../../../../assets/images/happy.png';\r\nimport cl from './../ProfileInfo.module.scss';\r\nimport { FormAction, reset } from 'redux-form';\r\nimport { ContactsType, ProfileType } from '../../../../types/types';\r\nimport { getProfileObjectData } from '../../../../redux/profile-selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../../redux/redux-store';\r\nimport { updateProfileThunk } from '../../../../redux/profile-reducer';\r\nimport { Button, Col, Row } from 'antd';\r\n\r\ntype PropsType = {\r\n    owner: boolean\r\n}\r\n\r\nexport const ProfileInfoEdit: React.FC<PropsType> = ({ owner }) => {\r\n    let [editMode, changeEditMode] = useState(false);\r\n\r\n    const profileData = useSelector<AppStateType, ProfileType>(getProfileObjectData)\r\n\r\n    const dispatchR = useDispatch()\r\n\r\n    let onSubmit = (dataFlow: FormProfileType, dispatch: Dispatch<FormAction>) => {\r\n        // typeScript is annoying that`s why there is an <any>\r\n        let promise: any = dispatchR(updateProfileThunk(dataFlow))\r\n        promise.then(() => changeEditMode(false))\r\n        dispatch(reset('editProfile'));\r\n\r\n    }\r\n    return (<>\r\n        <div>\r\n            {\r\n                (editMode && owner)\r\n                    ? <ProfileEditForm\r\n                        //@ts-ignore I need to fix this shit\r\n                        initialValues={profileData}\r\n                        onSubmit={onSubmit} />\r\n                    : owner &&\r\n                    <div>\r\n                        <Row className={cl.aboutMe} >\r\n                            <Col span={6} offset={6}>\r\n                                <div>About me:</div>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <div className={cl.aboutMeContent} >{profileData.aboutMe}</div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                           <Col span={24}>\r\n                               <div> Where to find me: </div>\r\n                           </Col>  \r\n                        </Row>\r\n\r\n                        <Row className={cl.links}>\r\n                            <Col span={24}>\r\n                                <div className={cl.contacts}>\r\n                                    {Object\r\n                                        .keys(profileData.contacts)\r\n                                        .map((key) => {\r\n                                            return <Contact key={key} property={key} value={profileData.contacts[key as keyof ContactsType]} />\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Button className={cl.editButton} onClick={() => changeEditMode(true)}>Edit Profile</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </div>\r\n            }\r\n        </div>\r\n    </>)\r\n}\r\n","import { SmileOutlined, SyncOutlined } from '@ant-design/icons';\r\nimport { Button, Col, Image, Popover, Row } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { getAuthID } from '../../../redux/authMe-selectors';\r\nimport { startChatThunk } from '../../../redux/messages-reducer';\r\nimport { uploadPhotoThunk } from '../../../redux/profile-reducer';\r\nimport { getProfileObjectData } from '../../../redux/profile-selectors';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport { ProfileType } from '../../../types/types';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport { ProfileStatusWithHook } from '../ProfileStatus/ProfileStatusHook';\r\nimport avaDefault from './../../../assets/startPage/av.jpg';\r\nimport cl from './ProfileInfo.module.scss';\r\nimport { ProfileInfoEdit } from './ProfileInfoEdit/ProfileInfoEdit';\r\n\r\ntype PropsType = {\r\n    userId: number\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({ userId }) => {\r\n\r\n    const authID = useSelector(getAuthID)\r\n    const profileData = useSelector<AppStateType, ProfileType>(getProfileObjectData)\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    let [editMode, changeEditMode] = useState(false);\r\n    //that`s why here is <any>\r\n    let [photoFile, changePhotoFile] = useState<any>('');\r\n    if (!profileData) {\r\n        return <Preloader />\r\n    }\r\n    let choosePhotoEdition = () => {\r\n        changeEditMode(true);\r\n    }\r\n    let choosedPhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length) {\r\n            changePhotoFile(e.target.files[0])\r\n        }\r\n    }\r\n\r\n\r\n    let uploadPhotoPreparation = () => {\r\n        //photoFile typeScript is annoying \r\n        dispatch(uploadPhotoThunk(photoFile))\r\n        changeEditMode(false);\r\n    }\r\n    const startMessaging = (userId: number) => {\r\n        const location = {\r\n            pathname: '/dialogs',\r\n            state: { fromDashboard: true }\r\n        }\r\n        dispatch(startChatThunk(userId));\r\n        history.push(location)\r\n    }\r\n    const content = (\r\n        <div>Double click to change avatar photo</div>\r\n    )\r\n\r\n    return (\r\n        <Layout className={cl.content}>\r\n            <Row>\r\n                <Col span={24}>\r\n                    {(editMode && (authID === userId || !userId))\r\n                        ? (<div>\r\n                            <input type=\"file\" accept=\"image/*\" onChange={(e) => choosedPhoto(e)} />\r\n                            <input onClick={uploadPhotoPreparation} type=\"button\" value='Upload' />\r\n                        </div>)\r\n                        :\r\n                        <Row className={cl.avatarFullNameStatus}>\r\n                            <Col span={6} >\r\n                                <Popover content={content} title=\"Tip\" placement='bottomLeft'>\r\n                                    <img\r\n                                        className={cl.avatarImage}\r\n                                        src={profileData.photos.small ? profileData.photos.small : avaDefault}\r\n                                        alt=\"avatar\"\r\n                                        onDoubleClick={choosePhotoEdition} />\r\n                                </Popover>\r\n                            </Col>\r\n                            <Col span={18} className={cl.colWithFullName}>\r\n                                <Row>\r\n                                    <div className={cl.fullname}>{profileData.fullName}</div>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col span={12}>\r\n                                        <div className={cl.status}><ProfileStatusWithHook isUserAuth={userId} /></div>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <div>Looking for a job? {profileData.lookingForAJob ? <SyncOutlined spin /> : <SmileOutlined rotate={180} />} </div>\r\n                                        <div> {profileData.lookingForAJobDescription}</div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row >\r\n                <Col span={24} >\r\n                    <div className={cl.description}>\r\n\r\n                        {(userId) ?\r\n                            <Button onClick={() => startMessaging(userId)}>Start Messaging</Button>\r\n                            : null\r\n                        }\r\n                        <ProfileInfoEdit owner={authID === userId || !userId} />\r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Layout>\r\n    );\r\n}\r\n\r\nconst ProfileInfoMemoized = React.memo(ProfileInfo)\r\n\r\nexport default ProfileInfoMemoized;","import React from 'react';\r\nimport { MyPosts } from './MyPosts/MyPosts';\r\nimport cl from './Profile.module.css';\r\nimport { WithRouteProps } from './ProfilePage';\r\nimport ProfileInfoMemoized from './ProfileInfo/ProfileInfo';\r\nimport { ProfileStatusWithHook } from './ProfileStatus/ProfileStatusHook';\r\n\r\n\r\n\r\nconst Profile: React.FC<WithRouteProps> = (props) => {\r\n    return (\r\n        <div className={cl.content}>\r\n            <ProfileInfoMemoized\r\n                userId={+props.match.params.userId}\r\n            />\r\n            <MyPosts />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getAuthID } from '../../redux/authMe-selectors';\r\nimport { getStatusThunk, setProfileThunk } from '../../redux/profile-reducer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { withAuthMe } from '../hoc/hoc';\r\nimport Profile from './Profile';\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n }\r\nexport type WithRouteProps = RouteComponentProps<PathParamsType>\r\n\r\nconst ProfilePage: React.FC<WithRouteProps> = (props) => {\r\n    const authorizedUser = useSelector(getAuthID)\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const refreshProfile = () => {\r\n        // : number | null\r\n            let userID = +props.match.params.userId;\r\n            if(!userID){\r\n                userID = authorizedUser;\r\n                if(!userID) return<Preloader/>\r\n            } \r\n            dispatch(setProfileThunk(userID))\r\n            dispatch(getStatusThunk(userID))\r\n      }\r\n      \r\n    useEffect(() => {\r\n        refreshProfile()\r\n    }, [])\r\n    useEffect(() => {\r\n        refreshProfile()\r\n    }, [props.match.params.userId])\r\n\r\n    return <Profile {...props} />\r\n}\r\n\r\n\r\nexport default  compose(\r\n    withRouter,  \r\n    withAuthMe\r\n)(ProfilePage)\r\n\r\n"],"sourceRoot":""}